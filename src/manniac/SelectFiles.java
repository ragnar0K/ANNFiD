/*
 * Copyright 2013 ragnar0k@fabytes.com.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package manniac;

/**
 *
 * @author ragnar0k@fabytes.com
 */

import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import java.util.concurrent.CountDownLatch;
import java.util.logging.Level;
import java.util.logging.Logger;

public class SelectFiles extends javax.swing.JFrame {

    /**
     * Creates new form SelectFiles
     */
    static String[] filter;
    static String selection;
    static String description;
    static CountDownLatch ctd;
    static FilterClass ff;

    public SelectFiles(String desc, String filter, CountDownLatch latch) {
        this(desc, new String[]{filter}, latch, "/");
    }
    
    public SelectFiles(String desc, String filter, CountDownLatch latch, String startingDir) {
        this(desc, new String[]{filter}, latch, startingDir);
    }

    public SelectFiles(String desc, String[] filters, CountDownLatch latch, String startingDir) {
        initComponents();
        filter = filters;
        description = desc;

        ff = new FilterClass(desc, filter);
        Selector.setFileSelectionMode(JFileChooser.FILES_ONLY);
        File fil = null;
        try {
            fil = new File(new File(startingDir).getCanonicalPath());
        } catch (IOException ex) {
            Logger.getLogger(SelectFiles.class.getName()).log(Level.SEVERE, null, ex);
        }
        Selector.setCurrentDirectory(fil);
        if (!desc.matches("ALL")) {
            Selector.setAcceptAllFileFilterUsed(false);
            Selector.addChoosableFileFilter(ff);
        }
        ctd = latch;
    }
    
    public SelectFiles(CountDownLatch latch)
    {
        this(latch, "/");
    }

    public SelectFiles(CountDownLatch latch, String startingDir) {
        initComponents();
        Selector.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        File fil = null;
        try {
            fil = new File(new File(startingDir).getCanonicalPath());
        } catch (IOException ex) {
            Logger.getLogger(SelectFiles.class.getName()).log(Level.SEVERE, null, ex);
        }
        Selector.setCurrentDirectory(fil);
        ctd = latch;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Selector = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Selector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectorActionPerformed
        File selected = null;
        if (evt.getActionCommand().matches("CancelSelection")) {
            this.dispose();
        } else if (evt.getActionCommand().matches("ApproveSelection")) {
            selected = Selector.getSelectedFile();
            try {
                //System.out.println(selected.getName());
                selection = selected.getCanonicalPath();
            } catch (IOException ex) {
                Logger.getLogger(SelectFiles.class.getName()).log(Level.SEVERE, null, ex);
            }
            ctd.countDown();
        }
    }//GEN-LAST:event_SelectorActionPerformed

    public String returnSelected() {
        return selection;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                //new SelectFiles(descr, filter).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser Selector;
    // End of variables declaration//GEN-END:variables
}
